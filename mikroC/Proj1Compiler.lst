;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/25/2023 10:26:36 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28C2      	GOTO       194
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C5      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;Proj1Compiler.c,35 :: 		void interrupt() {
;Proj1Compiler.c,36 :: 		INTCON.f7 = 0; // Disable Global Interrupt
0x000D	0x138B      	BCF        INTCON, 7
;Proj1Compiler.c,40 :: 		if (INTCON.f2 == 1) {
0x000E	0x1D0B      	BTFSS      INTCON, 2
0x000F	0x281B      	GOTO       L_interrupt0
;Proj1Compiler.c,42 :: 		tmr0Count++;
0x0010	0x0ABF      	INCF       _tmr0Count, 1
;Proj1Compiler.c,44 :: 		if (tmr0Count >= 76) {
0x0011	0x304C      	MOVLW      76
0x0012	0x023F      	SUBWF      _tmr0Count, 0
0x0013	0x1C03      	BTFSS      STATUS, 0
0x0014	0x2819      	GOTO       L_interrupt1
;Proj1Compiler.c,45 :: 		tmr0Count = 0;
0x0015	0x01BF      	CLRF       _tmr0Count
;Proj1Compiler.c,46 :: 		seconds++;
0x0016	0x0ABD      	INCF       _seconds, 1
0x0017	0x1903      	BTFSC      STATUS, 2
0x0018	0x0ABE      	INCF       _seconds+1, 1
;Proj1Compiler.c,47 :: 		}
L_interrupt1:
;Proj1Compiler.c,49 :: 		TMR0 = 0; // Load the TMR0 register
0x0019	0x0181      	CLRF       TMR0
;Proj1Compiler.c,50 :: 		INTCON.f2 = 0; // Clear TMR0 Interrupt Flag
0x001A	0x110B      	BCF        INTCON, 2
;Proj1Compiler.c,51 :: 		}
L_interrupt0:
;Proj1Compiler.c,53 :: 		INTCON.f7 = 1; // Enable Global Interrupt
0x001B	0x178B      	BSF        INTCON, 7
;Proj1Compiler.c,54 :: 		}
L_end_interrupt:
L__interrupt9:
0x001C	0x0820      	MOVF       32, 0
0x001D	0x00F0      	MOVWF      R0
0x001E	0x0845      	MOVF       ___savePCLATH, 0
0x001F	0x008A      	MOVWF      PCLATH
0x0020	0x0E44      	SWAPF      ___saveSTATUS, 0
0x0021	0x0083      	MOVWF      STATUS
0x0022	0x0EFF      	SWAPF      R15, 1
0x0023	0x0E7F      	SWAPF      R15, 0
0x0024	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0025	0x1283      	BCF        STATUS, 5
0x0026	0x1303      	BCF        STATUS, 6
0x0027	0x0843      	MOVF       ___DoICPAddr+1, 0
0x0028	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0029	0x0842      	MOVF       ___DoICPAddr, 0
0x002A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x002B	0x0008      	RETURN
; end of _____DoICP
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x002C	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x002D	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x002E	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x002F	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0030	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0031	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0032	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0033	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0034	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0035	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0036	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0037	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0038	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0039	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x003A	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x003B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x003C	0x2844      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x003D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x003E	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x003F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0040	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0041	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0042	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0043	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0044	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0045	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0046	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0047	0x2832      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0048	0x0008      	RETURN
; end of _Div_16X16_U
_init:
;Proj1Compiler.c,76 :: 		void init() {
;Proj1Compiler.c,77 :: 		TRISC = 0x00; // PORTC is the data bus
0x0049	0x1683      	BSF        STATUS, 5
0x004A	0x1303      	BCF        STATUS, 6
0x004B	0x0187      	CLRF       TRISC
;Proj1Compiler.c,78 :: 		TRISD = 0x00; // PORTD is the address bus
0x004C	0x0188      	CLRF       TRISD
;Proj1Compiler.c,79 :: 		}
L_end_init:
0x004D	0x0008      	RETURN
; end of _init
_updateMinutesTens:
;Proj1Compiler.c,66 :: 		int updateMinutesTens() {
;Proj1Compiler.c,67 :: 		minutesTens = (minutes/10)%10; // Get the tens digit of minutes
0x004E	0x300A      	MOVLW      10
0x004F	0x1283      	BCF        STATUS, 5
0x0050	0x1303      	BCF        STATUS, 6
0x0051	0x00F4      	MOVWF      R4
0x0052	0x3000      	MOVLW      0
0x0053	0x00F5      	MOVWF      R4+1
0x0054	0x0821      	MOVF       _minutes, 0
0x0055	0x00F0      	MOVWF      R0
0x0056	0x0822      	MOVF       _minutes+1, 0
0x0057	0x00F1      	MOVWF      R0+1
0x0058	0x202C      	CALL       _Div_16X16_U
0x0059	0x300A      	MOVLW      10
0x005A	0x00F4      	MOVWF      R4
0x005B	0x3000      	MOVLW      0
0x005C	0x00F5      	MOVWF      R4+1
0x005D	0x202C      	CALL       _Div_16X16_U
0x005E	0x0878      	MOVF       R8, 0
0x005F	0x00F0      	MOVWF      R0
0x0060	0x0879      	MOVF       R8+1, 0
0x0061	0x00F1      	MOVWF      R0+1
0x0062	0x0870      	MOVF       R0, 0
0x0063	0x00AF      	MOVWF      _minutesTens
0x0064	0x0871      	MOVF       R0+1, 0
0x0065	0x00B0      	MOVWF      _minutesTens+1
;Proj1Compiler.c,68 :: 		return minutesTens;
;Proj1Compiler.c,69 :: 		}
L_end_updateMinutesTens:
0x0066	0x0008      	RETURN
; end of _updateMinutesTens
_interruptInit:
;Proj1Compiler.c,81 :: 		void interruptInit() {
;Proj1Compiler.c,82 :: 		INTCON.f7 = 1; // Enable Global Interrupt
0x0067	0x178B      	BSF        INTCON, 7
;Proj1Compiler.c,83 :: 		INTCON.f6 = 1; // Enable Peripheral Interrupt
0x0068	0x170B      	BSF        INTCON, 6
;Proj1Compiler.c,84 :: 		INTCON.f5 = 1; // Enable TMR0 Interrupt
0x0069	0x168B      	BSF        INTCON, 5
;Proj1Compiler.c,85 :: 		OPTION_REG.f5 = 0; // Internal Instruction Cycle Clock (CLKO)
0x006A	0x1683      	BSF        STATUS, 5
0x006B	0x1303      	BCF        STATUS, 6
0x006C	0x1281      	BCF        OPTION_REG, 5
;Proj1Compiler.c,86 :: 		OPTION_REG.f4 = 0; // Increment on Low-to-High Transition on T0CKI Pin
0x006D	0x1201      	BCF        OPTION_REG, 4
;Proj1Compiler.c,87 :: 		OPTION_REG.f3 = 0; // Prescaler is assigned to the Timer0 module
0x006E	0x1181      	BCF        OPTION_REG, 3
;Proj1Compiler.c,89 :: 		OPTION_REG.f2 = 1;
0x006F	0x1501      	BSF        OPTION_REG, 2
;Proj1Compiler.c,90 :: 		OPTION_REG.f1 = 1;
0x0070	0x1481      	BSF        OPTION_REG, 1
;Proj1Compiler.c,91 :: 		OPTION_REG.f0 = 1;
0x0071	0x1401      	BSF        OPTION_REG, 0
;Proj1Compiler.c,93 :: 		TMR0 = 0; // Load the TMR0 register
0x0072	0x1283      	BCF        STATUS, 5
0x0073	0x0181      	CLRF       TMR0
;Proj1Compiler.c,94 :: 		}
L_end_interruptInit:
0x0074	0x0008      	RETURN
; end of _interruptInit
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0075	0x2025      	CALL       _____DoICP
0x0076	0x118A      	BCF        PCLATH, 3
0x0077	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0078	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0079	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x007A	0x0AC2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x007B	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x007C	0x0AC3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x007D	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x007E	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x007F	0x2875      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0080	0x0008      	RETURN
; end of ___CC2DW
_updateHoursOnes:
;Proj1Compiler.c,61 :: 		int updateHoursOnes() {
;Proj1Compiler.c,62 :: 		hoursOnes = hours%10; // Get the ones digit of hours
0x0081	0x300A      	MOVLW      10
0x0082	0x1283      	BCF        STATUS, 5
0x0083	0x1303      	BCF        STATUS, 6
0x0084	0x00F4      	MOVWF      R4
0x0085	0x3000      	MOVLW      0
0x0086	0x00F5      	MOVWF      R4+1
0x0087	0x0835      	MOVF       _hours, 0
0x0088	0x00F0      	MOVWF      R0
0x0089	0x0836      	MOVF       _hours+1, 0
0x008A	0x00F1      	MOVWF      R0+1
0x008B	0x202C      	CALL       _Div_16X16_U
0x008C	0x0878      	MOVF       R8, 0
0x008D	0x00F0      	MOVWF      R0
0x008E	0x0879      	MOVF       R8+1, 0
0x008F	0x00F1      	MOVWF      R0+1
0x0090	0x0870      	MOVF       R0, 0
0x0091	0x00B1      	MOVWF      _hoursOnes
0x0092	0x0871      	MOVF       R0+1, 0
0x0093	0x00B2      	MOVWF      _hoursOnes+1
;Proj1Compiler.c,63 :: 		return hoursOnes;
;Proj1Compiler.c,64 :: 		}
L_end_updateHoursOnes:
0x0094	0x0008      	RETURN
; end of _updateHoursOnes
_updateHoursTens:
;Proj1Compiler.c,56 :: 		int updateHoursTens() {
;Proj1Compiler.c,57 :: 		hoursTens = (hours/10)%10; // Get the tens digit of hours
0x0095	0x300A      	MOVLW      10
0x0096	0x1283      	BCF        STATUS, 5
0x0097	0x1303      	BCF        STATUS, 6
0x0098	0x00F4      	MOVWF      R4
0x0099	0x3000      	MOVLW      0
0x009A	0x00F5      	MOVWF      R4+1
0x009B	0x0835      	MOVF       _hours, 0
0x009C	0x00F0      	MOVWF      R0
0x009D	0x0836      	MOVF       _hours+1, 0
0x009E	0x00F1      	MOVWF      R0+1
0x009F	0x202C      	CALL       _Div_16X16_U
0x00A0	0x300A      	MOVLW      10
0x00A1	0x00F4      	MOVWF      R4
0x00A2	0x3000      	MOVLW      0
0x00A3	0x00F5      	MOVWF      R4+1
0x00A4	0x202C      	CALL       _Div_16X16_U
0x00A5	0x0878      	MOVF       R8, 0
0x00A6	0x00F0      	MOVWF      R0
0x00A7	0x0879      	MOVF       R8+1, 0
0x00A8	0x00F1      	MOVWF      R0+1
0x00A9	0x0870      	MOVF       R0, 0
0x00AA	0x00B3      	MOVWF      _hoursTens
0x00AB	0x0871      	MOVF       R0+1, 0
0x00AC	0x00B4      	MOVWF      _hoursTens+1
;Proj1Compiler.c,58 :: 		return hoursTens;
;Proj1Compiler.c,59 :: 		}
L_end_updateHoursTens:
0x00AD	0x0008      	RETURN
; end of _updateHoursTens
_updateMinutesOnes:
;Proj1Compiler.c,71 :: 		int updateMinutesOnes() {
;Proj1Compiler.c,72 :: 		minutesOnes = minutes%10; // Get the ones digit of minutes
0x00AE	0x300A      	MOVLW      10
0x00AF	0x1283      	BCF        STATUS, 5
0x00B0	0x1303      	BCF        STATUS, 6
0x00B1	0x00F4      	MOVWF      R4
0x00B2	0x3000      	MOVLW      0
0x00B3	0x00F5      	MOVWF      R4+1
0x00B4	0x0821      	MOVF       _minutes, 0
0x00B5	0x00F0      	MOVWF      R0
0x00B6	0x0822      	MOVF       _minutes+1, 0
0x00B7	0x00F1      	MOVWF      R0+1
0x00B8	0x202C      	CALL       _Div_16X16_U
0x00B9	0x0878      	MOVF       R8, 0
0x00BA	0x00F0      	MOVWF      R0
0x00BB	0x0879      	MOVF       R8+1, 0
0x00BC	0x00F1      	MOVWF      R0+1
0x00BD	0x0870      	MOVF       R0, 0
0x00BE	0x00A3      	MOVWF      _minutesOnes
0x00BF	0x0871      	MOVF       R0+1, 0
0x00C0	0x00A4      	MOVWF      _minutesOnes+1
;Proj1Compiler.c,73 :: 		return minutesOnes;
;Proj1Compiler.c,74 :: 		}
L_end_updateMinutesOnes:
0x00C1	0x0008      	RETURN
; end of _updateMinutesOnes
_main:
0x00C2	0x303B      	MOVLW      59
0x00C3	0x1283      	BCF        STATUS, 5
0x00C4	0x1303      	BCF        STATUS, 6
0x00C5	0x00A1      	MOVWF      _minutes
0x00C6	0x01A2      	CLRF       34
0x00C7	0x01A3      	CLRF       _minutesOnes
0x00C8	0x01A4      	CLRF       36
0x00C9	0x30C0      	MOVLW      192
0x00CA	0x00A5      	MOVWF      _dispDigit
0x00CB	0x30F9      	MOVLW      249
0x00CC	0x00A6      	MOVWF      38
0x00CD	0x30A4      	MOVLW      164
0x00CE	0x00A7      	MOVWF      39
0x00CF	0x30B0      	MOVLW      176
0x00D0	0x00A8      	MOVWF      40
0x00D1	0x3099      	MOVLW      153
0x00D2	0x00A9      	MOVWF      41
0x00D3	0x3092      	MOVLW      146
0x00D4	0x00AA      	MOVWF      42
0x00D5	0x3082      	MOVLW      130
0x00D6	0x00AB      	MOVWF      43
0x00D7	0x30F8      	MOVLW      248
0x00D8	0x00AC      	MOVWF      44
0x00D9	0x3080      	MOVLW      128
0x00DA	0x00AD      	MOVWF      45
0x00DB	0x3090      	MOVLW      144
0x00DC	0x00AE      	MOVWF      46
0x00DD	0x01AF      	CLRF       _minutesTens
0x00DE	0x01B0      	CLRF       48
0x00DF	0x01B1      	CLRF       _hoursOnes
0x00E0	0x01B2      	CLRF       50
0x00E1	0x01B3      	CLRF       _hoursTens
0x00E2	0x01B4      	CLRF       52
0x00E3	0x300B      	MOVLW      11
0x00E4	0x00B5      	MOVWF      _hours
0x00E5	0x01B6      	CLRF       54
0x00E6	0x01B7      	CLRF       _i
0x00E7	0x01B8      	CLRF       56
0x00E8	0x01B9      	CLRF       _l
0x00E9	0x01BA      	CLRF       58
0x00EA	0x01BB      	CLRF       _k
0x00EB	0x01BC      	CLRF       60
0x00EC	0x01BD      	CLRF       _seconds
0x00ED	0x01BE      	CLRF       62
0x00EE	0x01BF      	CLRF       _tmr0Count
0x00EF	0x01C0      	CLRF       _j
0x00F0	0x01C1      	CLRF       65
;Proj1Compiler.c,96 :: 		void main() {
;Proj1Compiler.c,97 :: 		init();
0x00F1	0x2049      	CALL       _init
;Proj1Compiler.c,98 :: 		interruptInit();
0x00F2	0x2067      	CALL       _interruptInit
;Proj1Compiler.c,102 :: 		while(1) {
L_main2:
;Proj1Compiler.c,104 :: 		PORTC = dispDigit[i];
0x00F3	0x0837      	MOVF       _i, 0
0x00F4	0x3E25      	ADDLW      _dispDigit
0x00F5	0x0084      	MOVWF      FSR
0x00F6	0x0800      	MOVF       INDF, 0
0x00F7	0x0087      	MOVWF      PORTC
;Proj1Compiler.c,105 :: 		PORTD = 0x01; // Select the first digit
0x00F8	0x3001      	MOVLW      1
0x00F9	0x0088      	MOVWF      PORTD
;Proj1Compiler.c,106 :: 		delay_ms(50);
0x00FA	0x3002      	MOVLW      2
0x00FB	0x00FB      	MOVWF      R11
0x00FC	0x3045      	MOVLW      69
0x00FD	0x00FC      	MOVWF      R12
0x00FE	0x30A9      	MOVLW      169
0x00FF	0x00FD      	MOVWF      R13
L_main4:
0x0100	0x0BFD      	DECFSZ     R13, 1
0x0101	0x2900      	GOTO       L_main4
0x0102	0x0BFC      	DECFSZ     R12, 1
0x0103	0x2900      	GOTO       L_main4
0x0104	0x0BFB      	DECFSZ     R11, 1
0x0105	0x2900      	GOTO       L_main4
0x0106	0x0000      	NOP
0x0107	0x0000      	NOP
;Proj1Compiler.c,107 :: 		PORTC = dispDigit[j];
0x0108	0x0840      	MOVF       _j, 0
0x0109	0x3E25      	ADDLW      _dispDigit
0x010A	0x0084      	MOVWF      FSR
0x010B	0x0800      	MOVF       INDF, 0
0x010C	0x0087      	MOVWF      PORTC
;Proj1Compiler.c,108 :: 		PORTD = 0x02; // Select the second digit
0x010D	0x3002      	MOVLW      2
0x010E	0x0088      	MOVWF      PORTD
;Proj1Compiler.c,109 :: 		delay_ms(50);
0x010F	0x3002      	MOVLW      2
0x0110	0x00FB      	MOVWF      R11
0x0111	0x3045      	MOVLW      69
0x0112	0x00FC      	MOVWF      R12
0x0113	0x30A9      	MOVLW      169
0x0114	0x00FD      	MOVWF      R13
L_main5:
0x0115	0x0BFD      	DECFSZ     R13, 1
0x0116	0x2915      	GOTO       L_main5
0x0117	0x0BFC      	DECFSZ     R12, 1
0x0118	0x2915      	GOTO       L_main5
0x0119	0x0BFB      	DECFSZ     R11, 1
0x011A	0x2915      	GOTO       L_main5
0x011B	0x0000      	NOP
0x011C	0x0000      	NOP
;Proj1Compiler.c,110 :: 		PORTC = dispDigit[k];
0x011D	0x083B      	MOVF       _k, 0
0x011E	0x3E25      	ADDLW      _dispDigit
0x011F	0x0084      	MOVWF      FSR
0x0120	0x0800      	MOVF       INDF, 0
0x0121	0x0087      	MOVWF      PORTC
;Proj1Compiler.c,111 :: 		PORTD = 0x04; // Select the third digit
0x0122	0x3004      	MOVLW      4
0x0123	0x0088      	MOVWF      PORTD
;Proj1Compiler.c,112 :: 		delay_ms(50);
0x0124	0x3002      	MOVLW      2
0x0125	0x00FB      	MOVWF      R11
0x0126	0x3045      	MOVLW      69
0x0127	0x00FC      	MOVWF      R12
0x0128	0x30A9      	MOVLW      169
0x0129	0x00FD      	MOVWF      R13
L_main6:
0x012A	0x0BFD      	DECFSZ     R13, 1
0x012B	0x292A      	GOTO       L_main6
0x012C	0x0BFC      	DECFSZ     R12, 1
0x012D	0x292A      	GOTO       L_main6
0x012E	0x0BFB      	DECFSZ     R11, 1
0x012F	0x292A      	GOTO       L_main6
0x0130	0x0000      	NOP
0x0131	0x0000      	NOP
;Proj1Compiler.c,113 :: 		PORTC = dispDigit[l];
0x0132	0x0839      	MOVF       _l, 0
0x0133	0x3E25      	ADDLW      _dispDigit
0x0134	0x0084      	MOVWF      FSR
0x0135	0x0800      	MOVF       INDF, 0
0x0136	0x0087      	MOVWF      PORTC
;Proj1Compiler.c,114 :: 		PORTD = 0x08; // Select the fourth digit
0x0137	0x3008      	MOVLW      8
0x0138	0x0088      	MOVWF      PORTD
;Proj1Compiler.c,115 :: 		delay_ms(50);
0x0139	0x3002      	MOVLW      2
0x013A	0x00FB      	MOVWF      R11
0x013B	0x3045      	MOVLW      69
0x013C	0x00FC      	MOVWF      R12
0x013D	0x30A9      	MOVLW      169
0x013E	0x00FD      	MOVWF      R13
L_main7:
0x013F	0x0BFD      	DECFSZ     R13, 1
0x0140	0x293F      	GOTO       L_main7
0x0141	0x0BFC      	DECFSZ     R12, 1
0x0142	0x293F      	GOTO       L_main7
0x0143	0x0BFB      	DECFSZ     R11, 1
0x0144	0x293F      	GOTO       L_main7
0x0145	0x0000      	NOP
0x0146	0x0000      	NOP
;Proj1Compiler.c,117 :: 		updateHoursTens();
0x0147	0x2095      	CALL       _updateHoursTens
;Proj1Compiler.c,118 :: 		updateHoursOnes();
0x0148	0x2081      	CALL       _updateHoursOnes
;Proj1Compiler.c,119 :: 		updateMinutesTens();
0x0149	0x204E      	CALL       _updateMinutesTens
;Proj1Compiler.c,120 :: 		updateMinutesOnes();
0x014A	0x20AE      	CALL       _updateMinutesOnes
;Proj1Compiler.c,122 :: 		i = hoursTens;
0x014B	0x0833      	MOVF       _hoursTens, 0
0x014C	0x00B7      	MOVWF      _i
0x014D	0x0834      	MOVF       _hoursTens+1, 0
0x014E	0x00B8      	MOVWF      _i+1
;Proj1Compiler.c,123 :: 		j = hoursOnes;
0x014F	0x0831      	MOVF       _hoursOnes, 0
0x0150	0x00C0      	MOVWF      _j
0x0151	0x0832      	MOVF       _hoursOnes+1, 0
0x0152	0x00C1      	MOVWF      _j+1
;Proj1Compiler.c,124 :: 		k = minutesTens;
0x0153	0x082F      	MOVF       _minutesTens, 0
0x0154	0x00BB      	MOVWF      _k
0x0155	0x0830      	MOVF       _minutesTens+1, 0
0x0156	0x00BC      	MOVWF      _k+1
;Proj1Compiler.c,125 :: 		l = minutesOnes;
0x0157	0x0823      	MOVF       _minutesOnes, 0
0x0158	0x00B9      	MOVWF      _l
0x0159	0x0824      	MOVF       _minutesOnes+1, 0
0x015A	0x00BA      	MOVWF      _l+1
;Proj1Compiler.c,136 :: 		}
0x015B	0x28F3      	GOTO       L_main2
;Proj1Compiler.c,137 :: 		}
L_end_main:
0x015C	0x295C      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [33]    _interrupt
0x0025       [7]    _____DoICP
0x002C      [29]    _Div_16X16_U
0x0049       [5]    _init
0x004E      [25]    _updateMinutesTens
0x0067      [14]    _interruptInit
0x0075      [12]    ___CC2DW
0x0081      [20]    _updateHoursOnes
0x0095      [25]    _updateHoursTens
0x00AE      [20]    _updateMinutesOnes
0x00C2     [155]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0021       [2]    _minutes
0x0023       [2]    _minutesOnes
0x0025      [10]    _dispDigit
0x002F       [2]    _minutesTens
0x0031       [2]    _hoursOnes
0x0033       [2]    _hoursTens
0x0035       [2]    _hours
0x0037       [2]    _i
0x0039       [2]    _l
0x003B       [2]    _k
0x003D       [2]    _seconds
0x003F       [1]    _tmr0Count
0x0040       [2]    _j
0x0042       [2]    ___DoICPAddr
0x0044       [1]    ___saveSTATUS
0x0045       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0087       [1]    TRISC
0x0088       [1]    TRISD
